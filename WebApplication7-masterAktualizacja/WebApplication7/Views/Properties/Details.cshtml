@model WebApplication7.Models.Property

@{
    ViewData["Title"] = "Property Details";
    bool isOwner = ViewData["IsOwner"] != null && (bool)ViewData["IsOwner"];
    double averageRating = ViewData["AverageRating"] != null ? (double)ViewData["AverageRating"] : 0.0;
    int ratingsCount = ViewData["RatingsCount"] != null ? (int)ViewData["RatingsCount"] : 0;
}

<h2>Property Details</h2>

<div>
    <hr />
    <div class="property-images">
        @if (!string.IsNullOrEmpty(Model.ImageUrl))
        {
            <img src="@Model.ImageUrl" alt="Main Property Image" class="thumbnail" onclick="openModal();currentSlide(1)" />
        }
        else
        {
            <img src="https://example.com/default-image.jpg" alt="Default Property Image" class="thumbnail" />
        }
    </div>
    <dl class="row">
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Address)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Address)</dd>
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Description)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Description)</dd>
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Price)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Price)</dd>
        <dt class="col-sm-2">@Html.DisplayNameFor(model => model.Status)</dt>
        <dd class="col-sm-10">@Html.DisplayFor(model => model.Status)</dd>

        @if (Model.OwnerUser != null)
        {
            <dt class="col-sm-2">Owner Email</dt>
            <dd class="col-sm-10">@Html.DisplayFor(model => model.OwnerUser.Email)</dd>
            <dt class="col-sm-2">Owner Contact</dt>
            <dd class="col-sm-10">@Model.OwnerUser.ContactNumber</dd>
        }
        else
        {
            <dt class="col-sm-2">Owner Email</dt>
            <dd class="col-sm-10">Unknown Owner</dd>
        }

        
        <dt class="col-sm-2">Average Rating</dt>
        <dd class="col-sm-10">
            @if (ratingsCount > 0)
            {
                <span>@($"Average Rating: {averageRating:F1}, Count: {ratingsCount}")</span>
            }
            else
            {
                <span>No ratings yet.</span>
            }
        </dd>


    </dl>

    @if (!isOwner)
    {
        @if (User.Identity.IsAuthenticated)
        {
            <a asp-action="Create" asp-controller="Reservations" asp-route-propertyId="@Model.PropertyId" class="btn btn-primary">Add Reservation</a>
        }
        else
        {
            <a asp-action="Login" asp-controller="Account" class="btn btn-primary">Log in to Add Reservation</a>
        }
    }
    else
    {
        <a asp-action="Edit" asp-route-id="@Model.PropertyId" class="btn btn-info">Edit Property Details</a>
    }

    <a asp-action="Index" asp-controller="Home" class="btn btn-secondary">Home</a>
</div>



<div id="propertyModal" class="modal">
    <span class="close cursor" onclick="closeModal()">&times;</span>
    <div class="modal-content">
        @if (!string.IsNullOrEmpty((string)ViewData["MainImageUrl"]))
        {
            <div class="mySlides">
                <img src="@ViewData["MainImageUrl"]" alt="Main Image">
            </div>
        }
        @if (!string.IsNullOrEmpty((string)ViewData["AdditionalImageUrl1"]))
        {
            <div class="mySlides">
                <img src="@ViewData["AdditionalImageUrl1"]" alt="Additional Image 1">
            </div>
        }
        @if (!string.IsNullOrEmpty((string)ViewData["AdditionalImageUrl2"]))
        {
            <div class="mySlides">
                <img src="@ViewData["AdditionalImageUrl2"]" alt="Additional Image 2">
            </div>
        }
        
        @if ((!string.IsNullOrEmpty((string)ViewData["AdditionalImageUrl1"]) || !string.IsNullOrEmpty((string)ViewData["AdditionalImageUrl2"])))
        {
            <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
            <a class="next" onclick="plusSlides(1)">&#10095;</a>
        }
    </div>
</div>


@section Scripts {
    <script>
        function openModal() {
            document.getElementById("propertyModal").style.display = "block";
        }

        function closeModal() {
            document.getElementById("propertyModal").style.display = "none";
        }

        var slideIndex = 1;
        showSlides(slideIndex);

        function plusSlides(n) {
            showSlides(slideIndex += n);
        }

        function currentSlide(n) {
            showSlides(slideIndex = n);
        }

        function showSlides(n) {
            var i;
            var slides = document.getElementsByClassName("mySlides");
            if (slides.length > 0) {
                if (n > slides.length) { slideIndex = 1 }
                if (n < 1) { slideIndex = slides.length }
                for (i = 0; i < slides.length; i++) {
                    slides[i].style.display = "none";
                }
                slides[slideIndex - 1].style.display = "block";
            }
        }
    </script>
    <style>
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            padding-top: 100px;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.9);
        }

        .modal-content {
            margin: auto;
            padding: 0;
            width: 80%;
            max-width: 700px;
            height: 500px;
            position: relative;
            overflow: hidden; 
            display: flex; 
            align-items: center;
            justify-content: center;
            background-color: #000; 
        }

        .close {
            position: absolute;
            top: 15px;
            right: 25px;
            color: #fff;
            font-size: 35px;
            cursor: pointer;
        }

        .mySlides {
            display: none;
            text-align: center;
        }

            .mySlides img {
                margin: auto;
                max-width: 100%;
                max-height: 100%;
                display: block;
                object-fit: contain; 
            }

        .prev, .next {
            cursor: pointer;
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            padding: 16px;
            color: #fff;
            font-size: 24px;
            font-weight: bold;
            user-select: none;
            transition: 0.3s;
            background-color: rgba(0, 0, 0, 0.5);
            border-radius: 50%;
        }

        .prev {
            left: 15px;
        }

        .next {
            right: 15px;
        }

            .prev:hover, .next:hover {
                background-color: rgba(0, 0, 0, 0.8);
            }

        img.thumbnail {
            cursor: pointer;
            max-width: 400px;
            transition: transform 0.2s;
        }

            img.thumbnail:hover {
                transform: scale(1.05);
            }
    </style>
}
